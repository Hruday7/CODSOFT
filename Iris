import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

# Load the Iris dataset
iris = load_iris()
X = iris.data  # Features: sepal length, sepal width, petal length, petal width
y = iris.target  # Target: species

# Convert to DataFrame for easier analysis
iris_df = pd.DataFrame(data=np.c_[X, y], columns=iris.feature_names + ['species'])
iris_df['species'] = iris_df['species'].map({0: 'setosa', 1: 'versicolor', 2: 'virginica'})

# Check the first few rows of the dataset
print(iris_df.head())

# Exploratory Data Analysis (EDA)
sns.pairplot(iris_df, hue='species', markers=["o", "s", "D"])
plt.show()

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a Random Forest classifier
model = RandomForestClassifier(n_estimators=100, random_state=42)

# Train the model
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate the model
print("Confusion Matrix:")
print(confusion_matrix(y_test, y_pred))

print("\nClassification Report:")
print(classification_report(y_test, y_pred))

accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy:.2f}")

# Example: Predicting species for new measurements
new_measurements = np.array([[5.1, 3.5, 1.4, 0.2]])  # Example measurements (sepal length, sepal width, petal length, petal width)
predicted_species = model.predict(new_measurements)
print(f"Predicted Species for {new_measurements[0]}: {iris.target_names[predicted_species][0]}")
